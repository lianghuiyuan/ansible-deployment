- name: Verify
  hosts: all

  tasks:
    - name: Get users
      ansible.builtin.getent:
        database: passwd

    - name: Get groups
      ansible.builtin.getent:
        database: group

    - name: Assert that user and group 'zookeeper' exists
      ansible.builtin.assert:
        that:
          - "'zookeeper' in getent_passwd"
          - "'zookeeper' in getent_group"

    - name: Register '/usr/share/apache-zookeeper-3.9.2' installation directory status
      ansible.builtin.stat:
        path: '/usr/share/apache-zookeeper-3.9.2'
      register: install_dir

    - name: Assert that '/usr/share/apache-zookeeper-3.9.2' directory is created
      ansible.builtin.assert:
        that:
          - install_dir.stat.exists
          - install_dir.stat.isdir
          - install_dir.stat.pw_name == 'zookeeper'
          - install_dir.stat.gr_name == 'zookeeper'

    - name: Register '/usr/share/zookeeper' symlink directory status
      ansible.builtin.stat:
        path: '/usr/share/zookeeper'
      register: zookeeper_dir

    - name: Assert that '/usr/share/zookeeper' symlink is created
      ansible.builtin.assert:
        that:
          - zookeeper_dir.stat.exists
          - zookeeper_dir.stat.islnk
          - zookeeper_dir.stat.lnk_target == '/usr/share/apache-zookeeper-3.9.2'

    - name: Register '/etc/zookeeper' directory status
      ansible.builtin.stat:
        path: '/etc/zookeeper'
      register: config_dir

    - name: Assert that '/etc/zookeeper' directory is created
      ansible.builtin.assert:
        that:
          - config_dir.stat.exists
          - config_dir.stat.isdir
          - config_dir.stat.pw_name == 'zookeeper'
          - config_dir.stat.gr_name == 'zookeeper'

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Assert that the ZooKeeper service is installed, running, and enabled
      ansible.builtin.assert:
        that:
          - "'zookeeper.service' in ansible_facts.services"
          - ansible_facts.services['zookeeper.service'].state == 'running'
          - ansible_facts.services['zookeeper.service'].status == 'enabled'

    - name: Create Znode and assert visible by all servers
      block:
        - name: Create a Znode entry in ZooKeeper
          ansible.builtin.command: /usr/share/zookeeper/bin/zkCli.sh create /TestZnode1 "test-node-1"
          when: ansible_hostname == "zookeeper-1"
          register: command_result
          changed_when: false

        - name: Output Znode creation command result
          ansible.builtin.debug:
            msg: '{{ command_result }}'
          when: ansible_hostname == "zookeeper-1"

        - name: Assert that the Znode creation command succeeded
          ansible.builtin.assert:
            that:
              - '"Created /TestZnode1" in command_result.stderr'
          when: ansible_hostname == "zookeeper-1"

        - name: Read the created Znode
          ansible.builtin.command: /usr/share/zookeeper/bin/zkCli.sh get /TestZnode1
          register: command_result
          changed_when: false

        - name: Assert that ZooKeeper servers can read the created Znode
          ansible.builtin.assert:
            that:
              - '"test-node-1" in command_result.stdout'

    - name: Delete Znode
      when: ansible_hostname == "zookeeper-1"
      block:
        - name: Get Znode
          ansible.builtin.command: /usr/share/zookeeper/bin/zkCli.sh get /TestZnode1
          when: ansible_hostname == "zookeeper-1"
          register: command_result
          failed_when: command_result.rc != 0
          changed_when: false

        - name: Delete Znode if it already exists
          ansible.builtin.command: /usr/share/zookeeper/bin/zkCli.sh delete /TestZnode1
          register: command_result
          failed_when: command_result.rc != 0
          when:
            - ansible_hostname == "zookeeper-1"
            - '"test-node-1" in command_result.stdout'
          changed_when: false
