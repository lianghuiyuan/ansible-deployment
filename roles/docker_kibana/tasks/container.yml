---
# https://www.elastic.co/guide/en/kibana/8.15/docker.html
# https://www.elastic.co/guide/en/kibana/8.15/settings.html

- name: Set quorum voters for es nodes
  set_fact:
    es_hosts: "{{ es_hosts | default([]) + ['http://' ~ hostvars[item]['host_inner_address'] ~ ':' ~ hostvars[item]['es_http_port']] }}"
  with_items: "{{ groups['docker_elasticsearch'] }}"
  tags: ['always']

- name: container | Ensure directorys has correct ownership
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: '1000'
    group: '1000'
    mode: '0777'
    recurse: yes
  with_items: 
    - '{{ kibana_home_dir }}'
    - '{{ kibana_config_dir }}'
  tags: ['install', 'start', 'recreate', 'update']

- name: container | {{ docker_container_state }} Kibana container
  community.docker.docker_container:
    name: 'kibana'
    image: '{{ kibana_image }}:{{ kibana_version }}'
    state: '{{ docker_container_state }}'        # choices: [absent, present, healthy, stopped, started]
    restart: '{{ docker_container_restart }}'    # Use with started state to force a matching container to be stopped and restarted.
    recreate: '{{ docker_container_recreate }}'  # Use with present and started states to force the re-creation of an existing container.
    restart_policy: always
    ports:
      - "{{ kibana_port }}:5601"
    # volumes:
    #   - '{{ kibana_config_dir }}:/usr/share/kibana/config'
    memory: '{{ kibana_mem_limit }}'     # set memory limit for the container
    env:
      SERVER_NAME: 'kibana'
      # ELASTICSEARCH_HOSTS: "{{ es_hosts | join(',') }}"
      # ELASTICSEARCH_HOSTS: '["http://192.168.0.42:9200", "http://192.168.0.43:9200", "http://192.168.0.113:9200"]'
      ELASTICSEARCH_HOSTS: "http://{{ host_inner_address }}:9200"
      # KIBANA_ELASTICSEARCH_URL: "http://192.168.0.42:9200"
      ELASTICSEARCH_USERNAME: "elastic"
      ELASTICSEARCH_PASSWORD: "{{ kibana_es_password }}"
      XPACK_SECURITY_ENABLED: "true"
      SERVER_PUBLICBASEURL: "http://{{ host_inner_address }}:5601"
  tags: ['install', 'start', 'stop', 'restart', 'uninstall','destory', 'recreate', 'update']

- name: remove directorys
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: 
    - '{{ kibana_home_dir }}'
    - '{{ kibana_config_dir }}'
  tags: ['destory']