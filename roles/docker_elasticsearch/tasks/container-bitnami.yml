---
# https://www.elastic.co/guide/en/elasticsearch/reference/7.5/docker.html
# ENV variables: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-configuration-methods
# https://github.com/elastic/elasticsearch/blob/main/distribution/src/config/elasticsearch.yml


- name: Set quorum voters for each discovery node
  set_fact:
    es_discovery_seed_hosts: "{{ es_discovery_seed_hosts | default([]) + [hostvars[item]['host_inner_address'] ~ ':' ~ hostvars[item]['es_transport_port']] }}"
  with_items: "{{ groups['docker_elasticsearch'] }}"
  # when: item != inventory_hostname
  tags: ['always']

- name: Set quorum voters for each initial master node
  set_fact:
    es_initial_master_nodes: "{{ es_initial_master_nodes | default([]) + ['es_' ~ hostvars[item]['es_node_id']] }}"
  with_items: "{{ groups['docker_elasticsearch'] }}"
  tags: ['always']

- name: container | Ensure directorys has correct ownership
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: '1000'
    group: '1000'
    mode: '0777'
    recurse: yes
  with_items: 
    - '{{ es_home_dir }}'
  tags: ['install', 'start', 'recreate', 'update']

- name: Permanently set vm.max_map_count
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    regexp: '^vm.max_map_count'
    line: 'vm.max_map_count=262144'
    state: present
  tags: ['install', 'start', 'recreate', 'update']

- name: Reload sysctl to apply the changes
  ansible.builtin.command: sysctl -p
  tags: ['install', 'start', 'recreate', 'update']

- name: container | {{ docker_container_state }} ElasticSearch container
  community.docker.docker_container:
    name: 'es_{{ es_node_id }}'
    image: '{{ image }}:{{ version }}'
    hostname: 'es_{{ es_node_id }}'
    domainname: 'es_{{ es_node_id }}'
    state: '{{ docker_container_state }}'        # choices: [absent, present, healthy, stopped, started]
    restart: '{{ docker_container_restart }}'    # Use with started state to force a matching container to be stopped and restarted.
    recreate: '{{ docker_container_recreate }}'  # Use with present and started states to force the re-creation of an existing container.
    restart_policy: always
    ports:
      - "0.0.0.0:{{ es_http_port }}:9200"
      - "0.0.0.0:{{ es_transport_port }}:9300"
    volumes:
      - '{{ es_home_dir }}:/bitnami'
    memory: '{{ es_mem_limit }}'     # set memory limit for the container
    ulimits: 
      - memlock:-1:-1
      - nofile:200000:200000
    env:
      ELASTICSEARCH_CLUSTER_NAME: elasticsearch-cluster
      ELASTICSEARCH_NODE_NAME: 'es_{{ es_node_id }}'
      ELASTICSEARCH_NODE_MASTER: 'true'
      ELASTICSEARCH_NODE_DATA: 'true'
      ELASTICSEARCH_NETWORK_HOST: '0.0.0.0'
      ELASTICSEARCH_CLUSTER_INITIAL_MASTER_NODES: "{{ es_initial_master_nodes | join(',') }}"
      # ELASTICSEARCH_DISCOVERY_SEED_HOSTS: "{{ es_discovery_seed_hosts | join(',') }}"
      ELASTICSEARCH_CLUSTER_HOSTS: "{{ es_discovery_seed_hosts | join(',') }}"
      # ELASTICSEARCH_ADVERTISED_HOSTNAME: '{{ host_inner_address }}:{{ es_transport_port }}'
      ELASTICSEARCH_NETWORK_PUBLISH_HOST: '{{ host_inner_address }}'
      ELASTICSEARCH_TRANSPORT_PUBLISH_HOST: '{{ host_inner_address }}'
      ELASTICSEARCH_HEAP_SIZE: '{{ jvm_heap_size }}'
      ELASTICSEARCH_PASSWORD: '{{ es_password }}'
  tags: ['install', 'start', 'stop', 'restart', 'uninstall','destory', 'recreate', 'update']

- name: remove directorys
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: 
    - '{{ es_home_dir }}'
  tags: ['destory']