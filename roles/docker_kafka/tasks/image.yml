---
# pull save load distribute 

# login private docker hub.
# - name: 'image | Login into {{ docker_registry }}'
#   local_action:
#     community.docker.docker_login:
#       registry: '{{ docker_registry }}'
#       username: '{{ registry_user }}'
#       password: '{{ registry_pwd }}'
#       reauthorize: true
#   tags: ['install']

- name: 'image | Login into {{ docker_registry }} on local machine'
  delegate_to: localhost
  community.docker.docker_login:
    registry: "{{ docker_registry }}"
    username: "{{ registry_user }}"
    password: "{{ registry_pwd }}"
    reauthorize: true
    validate_certs: false
  tags: ['install']

- name: image | Pull an image on local machine
  delegate_to: localhost
  community.docker.docker_image:
    name: '{{ image }}:{{ version }}'
    source: pull
    # Select platform for pulling. If not specified, will pull whatever docker prefers.
    pull:
      platform: '{{ cpu_arch | lower }}'
  tags: ['install']

- name: image | Log out of {{ docker_registry }} on local machine
  community.docker.docker_login:
    state: absent
  tags: ['install']

- name: image | Archive image on local machine
  delegate_to: localhost
  community.docker.docker_image:
    name: '{{ image }}'
    tag: '{{ version }}'
    state: 'present'
    archive_path: '{{ image_archive_name }}'
    source: local
  tags: ['install']

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: '{{ image_archive_name }}'
    dest: '{{ image_archive_dir }}/{{ image_archive_name }}'
    owner: root
    group: root
    mode: '0644'
  tags: ['install']

- name: Load image from archive
  community.docker.docker_image:
    name: '{{ image }}'
    tag: '{{ version }}'
    state: 'present'
    load_path: '{{ image_archive_dir }}/{{ image_archive_name }}'
    source: load
  tags: ['install']

- name: Remove image
  community.docker.docker_image:
    state: absent
    name: '{{ image }}'
    tag: '{{ version }}'
  tags: ['uninstall']

# - name: Load all image(s) from the given tar file
#   community.docker.docker_image_load:
#     path: '{{ image_archive_dir }}/{{ image_archive_name }}'
#   register: result
#   tags: ['install']

# - name: Print the loaded image names
#   ansible.builtin.debug:
#     msg: "Loaded the following images: {{ result.image_names | join(', ') }}"
#   tags: ['install']