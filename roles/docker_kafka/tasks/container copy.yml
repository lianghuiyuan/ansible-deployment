---
# https://github.com/apache/kafka/blob/3.7/docker/examples/jvm/cluster/combined/plaintext/docker-compose.yml
# https://github.com/apache/kafka/blob/3.7/docker/examples/README.md
# https://github.com/apache/kafka/blob/3.7/config/kraft/server.properties

# - name: Print outer address
#   debug:
#     msg: "The outer address of {{ item }} is {{ hostvars[item]['host_outer_address'] }}"
#   with_items: "{{ groups['docker_kafka'] }}"
#   tags: ['debug']

- name: Set quorum voters for each Kafka broker
  set_fact:
    kafka_controller_quorum_voters: "{{ kafka_controller_quorum_voters | default([]) + [hostvars[item]['kafka_broker_id'] ~ '@' ~ hostvars[item]['host_inner_address'] ~ ':' ~ hostvars[item]['kafka_host_controller_port']] }}"
  with_items: "{{ groups['docker_kafka'] }}"
  tags: ['always']

# - name: container | remove kafka container
#   community.docker.docker_container:
#     name: kafka
#     state: absent
#   tags: ['install']

- name: container | {{ docker_container_state }} kafka container
  community.docker.docker_container:
    name: 'kafka_{{ kafka_broker_id }}'
    image: '{{ image }}:{{ version }}'
    hostname: 'kafka_{{ kafka_broker_id }}'
    state: '{{ docker_container_state }}'
    restart: '{{ docker_container_restart }}'
    restart_policy: always
    ports:
      - "{{ kafka_host_broker_port }}:9092"
      - "{{ kafka_host_controller_port }}:9093"
    # volumes:
    #   - '{{ kafka_log_dir }}:{{ container_log_dir }}:rw'
    env:
      KAFKA_NODE_ID: '{{ kafka_broker_id | string }}'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: |-
        {% if kafka_host_broker_port == 9092 -%}
        CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        {%- else -%}
        CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        {%- endif %}
      KAFKA_CONTROLLER_QUORUM_VOTERS: "{{ kafka_controller_quorum_voters | join(',') }}"
      KAFKA_LISTENERS: |-
        {% if kafka_host_broker_port == 9092 -%}
        PLAINTEXT://:9092,CONTROLLER://:9093
        {%- else -%}
        PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:{{ kafka_host_broker_port }}
        {%- endif %}
      KAFKA_ADVERTISED_LISTENERS: |-
        {% if kafka_host_broker_port == 9092 -%}
        PLAINTEXT://{{ service_ip }}:{{ kafka_host_broker_port }}
        {%- else -%}
        PLAINTEXT://kafka_{{ kafka_broker_id | trim }}:9092,PLAINTEXT_HOST://{{ service_ip }}:{{ kafka_host_broker_port }}
        {%- endif %}
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '{{ kafka_cluster_id }}'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '3'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '3'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '3'
      # KAFKA_HEAP_OPTS: '-Xmx512M -Xms256M'
      KAFKA_NUM_PARTITIONS: '3'
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false' 
      KAFKA_LOG_RETENTION_HOURS: '168'     # 7 days
      KAFKA_LOG4J_LOGGER_KAFKA: WARN           # DEBUG、INFO、WARN、ERROR
      KAFKA_LOG4J_ROOTLOGGER: 'WARN, stdout'
      KAFKA_LOG_DIRS: '{{ container_log_dir }}'
  tags: ['always']

# - name: Create bucket-log topic with partitions and replication factor
#   command: >
#     kafka-topics.sh --create
#     --zookeeper localhost:2181
#     --replication-factor 3
#     --partitions 3
#     --topic bucket-log
#   tags: ['setup', 'kafka']

# - name: Create Kafka topic if it does not exist
#   shell: |
#     /opt/kafka/bin/kafka-topics.sh --create --topic {{ topic_name }} \
#     --bootstrap-server {{ kafka_broker }}:{{ kafka_port }} \
#     --partitions {{ partitions }} --replication-factor {{ replication_factor }}
#   when: "{{ topic_does_not_exist }}"
