---
# https://github.com/apache/kafka/blob/3.7/docker/examples/jvm/cluster/combined/plaintext/docker-compose.yml
# https://github.com/apache/kafka/blob/3.7/docker/examples/README.md
# https://github.com/apache/kafka/blob/3.7/config/kraft/server.properties
# https://github.com/bitnami/containers/blob/main/bitnami/kafka/README.md


- name: Set quorum voters for each Kafka broker
  set_fact:
    kafka_controller_quorum_voters: "{{ kafka_controller_quorum_voters | default([]) + [hostvars[item]['kafka_broker_id'] ~ '@' ~ hostvars[item]['host_inner_address'] ~ ':' ~ hostvars[item]['kafka_host_controller_port']] }}"
  with_items: "{{ groups['docker_kafka'] }}"
  tags: ['always']

- name: Ensure directorys has correct ownership
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: 1000
    group: 1000
    mode: |-
      {% if item == kafka_shell_dir -%}
      0777
      {%- else -%}
      0766
      {%- endif %}
    recurse: yes
  with_items: 
    - '{{ kafka_data_dir }}'
    - '{{ kafka_config_dir }}'
    - '{{ kafka_log_dir }}'
  tags: ['install', 'start']

- name: container | {{ docker_container_state }} kafka container
  community.docker.docker_container:
    name: 'kafka_{{ kafka_broker_id }}'
    image: '{{ image }}:{{ version }}'
    hostname: 'kafka_{{ kafka_broker_id }}'
    state: '{{ docker_container_state }}'
    restart: '{{ docker_container_restart }}'
    restart_policy: always
    ports:
      - "{{ kafka_host_broker_port }}:9092"
      - "{{ kafka_host_controller_port }}:9093"
    volumes:
      - '{{ kafka_data_dir }}:{{ container_data_dir }}:rw'
      - '{{ kafka_config_dir }}:{{ kafka_config_dir }}:rw'
      - '{{ kafka_log_dir }}:{{ container_log_dir }}:rw'
    env:
      KAFKA_NODE_ID: '{{ kafka_broker_id | string }}'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: "{{ kafka_controller_quorum_voters | join(',') }}"
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://{{ service_ip }}:{{ kafka_host_broker_port }}'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '{{ kafka_cluster_id }}'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '3'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '3'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '3'
      # KAFKA_HEAP_OPTS: '-Xms2g -Xmx2g'
      KAFKA_NUM_PARTITIONS: '3'
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false' 
      KAFKA_LOG_RETENTION_MS: '604800000'        # 7 days
      KAFKA_LOG_RETENTION_BYTES: '1073741824'    # 1 GB
      KAFKA_LOG_SEGMENT_MS: '604800000'          # 7 days
      KAFKA_LOG_SEGMENT_BYTES: '1073741824'      # 1GiB
      KAFKA_LOG4J_LOGGER_KAFKA: 'WARN'           # DEBUG、INFO、WARN、ERROR
      KAFKA_LOG4J_ROOTLOGGER: 'WARN, stdout'
      KAFKA_LOG4J_LOGGERS: 'WARN'
      KAFKA_LOG_DIRS: '{{ container_log_dir }}'
  tags: ['install', 'start', 'stop', 'restart', 'uninstall','destory']

- name: remove directorys
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: 
    - '{{ kafka_data_dir }}'
    - '{{ kafka_config_dir }}'
    - '{{ kafka_log_dir }}'
  tags: ['destory']