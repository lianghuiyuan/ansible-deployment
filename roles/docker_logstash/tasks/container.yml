---
# https://www.elastic.co/guide/en/logstash/7.17/docker.html
# https://www.elastic.co/guide/en/logstash/7.17/docker-config.html
# https://www.elastic.co/guide/en/logstash/7.17/logstash-settings-file.html
# https://elastic.ac.cn/guide/en/logstash/8.14/logstash-settings-file.html
# https://github.com/elastic/logstash/blob/main/config/logstash.yml

- name: container | Ensure directorys has correct ownership
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: '1000'
    group: '1000'
    mode: '0777'
    recurse: yes
  with_items: 
    - '{{ logstash_home_dir }}'
    - '{{ logstash_config_dir }}'
    - '{{ logstash_pipeline_dir }}'
  tags: ['install', 'start', 'recreate', 'update']

- name: container | {{ docker_container_state }} Logstash container
  community.docker.docker_container:
    name: 'logstash'
    image: '{{ logstash_image }}:{{ logstash_version }}'
    hostname: 'logstash'
    state: '{{ docker_container_state }}'        # choices: [absent, present, healthy, stopped, started]
    restart: '{{ docker_container_restart }}'    # Use with started state to force a matching container to be stopped and restarted.
    recreate: '{{ docker_container_recreate }}'  # Use with present and started states to force the re-creation of an existing container.
    restart_policy: always
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - '{{ logstash_config_dir }}:/usr/share/logstash/config'
      - '{{ logstash_pipeline_dir }}:/usr/share/logstash/pipeline'
      - /etc/localtime:/etc/localtime
    env: 
      LOG_LEVEL: warn
      LOG_FORMAT: json
      ELASTIC_USERNAME: 'elastic'
      ELASTIC_PASSWORD: "CloudEdge@1234"
      ELASTICSEARCH_HOST_PORT: ${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
  tags: ['install', 'start', 'stop', 'restart', 'uninstall','destory', 'recreate', 'update']

- name: remove directorys
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: 
    - '{{ logstash_home_dir }}'
    - '{{ logstash_config_dir }}'
    - '{{ logstash_pipeline_dir }}'
  tags: ['destory']